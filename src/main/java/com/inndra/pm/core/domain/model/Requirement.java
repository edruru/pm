package com.inndra.pm.core.domain.model;

import org.hibernate.validator.constraints.NotEmpty;

/**
 * Requirement.
 *
 * @author edwin.rubio
 * @version 1.0
 * @since 2014-06-05
 */

public class Requirement {

    @NotEmpty(message = "Please enter a description")
    private String text;
    private Integer priorityId;
    private Integer id;

    private Integer userId;
    private String creationDate;
    private String beginDate;
    private String finishDate;
    private Integer projectId;
    private Integer sprintId;


    public Requirement() {
        this.id = this.sprintId = this.projectId = null;
        this.beginDate = this.finishDate = null;
    }

    /**
     * We set all values to null, except "text" and "priorityId" for validation purposes.
     *
     * @param id           The id of the requirement. (Generated).
     * @param text         (Required) The main content for the requirement.
     * @param priorityId   (Required) id of the priorityId. (Low, Medium, High, Urgent).
     * @param userId       contains the id of the user assigned to this requirement.
     * @param creationDate generated by the server at creation time.
     * @param beginDate    date assigned by the user whenever the requirement resolution process is started.
     * @param finishDate   date assigned by the user when the requirement process ends.
     * @param projectId    (if any) contains the id of the projectId in which this requirements belongs to.
     * @param sprintId     (if any) contains the id of the sprint that this requirement belongs to.
     */

    public Requirement(String text, Integer priorityId, Integer id, Integer userId, String creationDate, String beginDate, String finishDate, Integer projectId, Integer sprintId) {
        this.text = text;
        this.priorityId = priorityId;
        this.id = id;
        this.userId = userId;
        this.creationDate = creationDate;
        this.beginDate = beginDate;
        this.finishDate = finishDate;
        this.projectId = projectId;
        this.sprintId = sprintId;
    }

    //--Normal setter/getter behavior.
    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public String getText() {
        return text;
    }

    public void setText(String text) {
        this.text = text;
    }

    public Integer getPriorityId() {
        return priorityId;
    }

    public void setPriorityId(Integer priorityId) {
        this.priorityId = priorityId;
    }

    public Integer getUserId() {
        return userId;
    }

    /**
     * Setter method for User Assigned
     *
     * @param userId Validates the attribute, if this parameter is NULL (Sent by the view), we keep
     *               the java null value instead, that way the Foreign Key constraint in the database
     *               won't be violated.
     */
    public void setUserId(Integer userId) {
        if (userId > 0) {
            this.userId = userId;
        } else {
            this.userId = null;
        }
    }

    public String getCreationDate() {
        return String.valueOf(creationDate);
    }

    public void setCreationDate(String creationDate) {
        this.creationDate = creationDate;
    }

    public String getBeginDate() {
        return this.beginDate;
    }

    /**
     * Setter method for Begin Date
     *
     * @param beginDate Validates the attribute, if this parameter is empty (Sent by the view), we keep
     *                  the java null value instead for database insertion purposes.
     */
    public void setBeginDate(String beginDate) {
        if (beginDate != null) {
            if (!beginDate.isEmpty()) {
                this.beginDate = beginDate;
            }
        } else {
            this.beginDate = null;
        }
    }

    public String getFinishDate() {
        return finishDate;
    }

    /**
     * Setter method for Finish Date
     *
     * @param finishDate Validates the attribute, if this parameter is empty (Sent by the view), we keep
     *                   the java null value instead for database insertion purposes.
     */
    public void setFinishDate(String finishDate) {
        if (finishDate != null) {
            if (!finishDate.isEmpty()) {
                this.finishDate = finishDate;
            }
        } else {
            this.finishDate = null;
        }
    }

    public Integer getProjectId() {
        return projectId;
    }

    /**
     * Setter method for Project
     *
     * @param projectId Validates the attribute, if this parameter is NULL (Sent by the view), we keep
     *                  the java null value instead, that way the Foreign Key constraint in the database
     *                  won't be violated.
     */
    public void setProjectId(Integer projectId) {
        if (projectId > 0) {
            this.projectId = projectId;
        } else {
            this.projectId = null;
        }
    }

    public Integer getSprintId() {
        return sprintId;
    }

    public void setSprintId(Integer sprintId) {
        this.sprintId = sprintId;
    }


    @Override
    public String toString() {
        StringBuilder info = new StringBuilder("Requirement[");
        info.append(" text:").append(text);
        info.append(" priorityId:").append(priorityId);
        info.append(" userId:").append(userId);
        info.append(" creationDate:").append(creationDate);
        info.append(" beginDate:").append(beginDate);
        info.append(" finishDate:").append(finishDate);
        info.append(" projectId:").append(projectId);
        info.append(" sprintId:").append(sprintId);
        return (info.append(" ]")).toString();
    }

}
